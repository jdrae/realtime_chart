# Generated by Django 4.2.23 on 2025-07-20 02:57

from django.db import migrations, models

from config.settings import TRUE_IF_TEST_ELSE_FALSE


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Kline",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("event_time", models.BigIntegerField()),
                ("symbol", models.CharField(max_length=20)),
                ("is_closed", models.BooleanField()),
                ("start_time", models.BigIntegerField()),
                ("close_time", models.BigIntegerField()),
                ("first_trade_id", models.BigIntegerField()),
                ("last_trade_id", models.BigIntegerField()),
                ("open_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("close_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("high_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("low_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("trade_count", models.BigIntegerField()),
                ("volume_base", models.DecimalField(decimal_places=10, max_digits=30)),
                ("volume_quote", models.DecimalField(decimal_places=10, max_digits=30)),
                (
                    "taker_volume_base",
                    models.DecimalField(decimal_places=10, max_digits=30),
                ),
                (
                    "taker_volume_quote",
                    models.DecimalField(decimal_places=10, max_digits=30),
                ),
                ("saved_at", models.DateTimeField()),
            ],
            options={
                "db_table": "kline_1s_processed",
                "managed": TRUE_IF_TEST_ELSE_FALSE,
            },
        ),
        migrations.CreateModel(
            name="AggregatedKline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("interval", models.CharField(max_length=10)),
                ("symbol", models.CharField(max_length=20)),
                ("start_time", models.BigIntegerField()),
                ("end_time", models.BigIntegerField()),
                ("row_count", models.IntegerField()),
                ("open_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("close_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("high_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("low_price", models.DecimalField(decimal_places=10, max_digits=20)),
                ("trade_count", models.BigIntegerField()),
                ("volume_base", models.DecimalField(decimal_places=10, max_digits=30)),
                ("volume_quote", models.DecimalField(decimal_places=10, max_digits=30)),
                (
                    "taker_volume_base",
                    models.DecimalField(decimal_places=10, max_digits=30),
                ),
                (
                    "taker_volume_quote",
                    models.DecimalField(decimal_places=10, max_digits=30),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "aggregated_kline",
                "managed": True,
                "unique_together": {("interval", "symbol", "start_time")},
            },
        ),
    ]
